<?php
use Symfony\Cmf\Component\Routing\RouteObjectInterface;

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function kwall_preprocess_block__viewspagetitle(&$variables) {
  $variables['#cache']['contexts'][] = 'url.path';
  $variables['#cache']['contexts'][] = 'url.query_args';
}


/**
 * Implements hook_preprocess_html.
 */
function kwall_preprocess_html(&$vars) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof NodeInterface) {
    $vars['attributes']['class'][] = 'page-node-' . $node->getType();
    $vars['attributes']['class'][] = 'page-node-' . $node->id();
  }
  else {
    $vars['attributes']['class'][] = 'page-no-node';
  }
}


/**
 * Implements THEME_preprocess_page_title().
 */
function kwall_preprocess_page_title(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ( isset($node->field_hide_page_title->value) ) {
    if ( $node->field_hide_page_title->value == '1' ) {
      $variables['title'] = '';
    }
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function kwall_preprocess_breadcrumb(&$variables) {
  // We are creating a variable for the Current Page Title, to allow us to print
  // it after the breadcrumbs loop has run.
  $request = \Drupal::request();
  if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
    // Search page titles aren't resolved using the title_resolver service - it
    // will always return 'Search' instead of 'Search for [term]', which would
    // give us a breadcrumb of Home >> Search >> Search.
    // @see https://www.drupal.org/project/drupal/issues/2359901
    // @see https://www.drupal.org/project/drupal/issues/2403359
    if (($entity = $request->attributes->get('entity')) && $entity->getEntityTypeId() === 'search_page') {
      $variables['current_page_title'] = $entity->getPlugin()->suggestedTitle();
    }
    else {
      $variables['current_page_title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }
  }
  // Since we are printing the 'Current Page Title', add the URL cache context.
  // If we don't, then we might end up with something like
  // "Home > Articles" on the Recipes page, which should read "Home > Recipes".
  $variables['#cache']['contexts'][] = 'url';
}
